{"mappings":"AASA,MAAMA,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAqBtB,SAAuBC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,EAAUS,MAAAR,IAGpBM,EAAO,C,SAAEP,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,IA7BDS,OAAOd,EAAKa,MAAME,OACnBD,OAAOd,EAAKgB,KAAKD,OACfD,OAAOd,EAAKiB,OAAOF","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', createPromise);\n\nlet delay = Number(form.delay.value);\nlet step = Number(form.step.value);\nlet amount = Number(form.amount.value);\n\nfunction createPromise(e) {\n  e.preventDefault();\n  console.log('555');\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        //\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// const form = {\n//   startBtn: document.querySelector('[type=\"submit\"]'),\n//   formEl: document.querySelector('form'),\n//   delay: document.querySelector('[name=\"delay\"]'),\n//   step: document.querySelector('[name=\"step\"]'),\n//   amount: document.querySelector('[name=\"amount\"]'),\n// };\n\n// form.startBtn.addEventListener('submit', createPromise);\n// form.formEl.addEventListener('input', getInputData);\n\n// let delay = 0;\n// let step = 0;\n// let amount = 0;\n\n// function getInputData(e) {\n//   delay = Number(form.delay.value);\n//   step = Number(form.step.value);\n//   amount = Number(form.amount.value);\n//   console.log({ delay, step, amount });\n\n//   return { delay, step, amount };\n// }\n\n// console.log({ delay, step, amount });\n\n// // console.log(amount);\n\n// function createPromise(e) {\n//   e.preventDefault();\n\n//   const { delay, step, amount } = getInputData(e);\n//   console.log(5555);\n\n//   for (let i = 0; i < Number(amount.value); i += 1) {\n//     createPromise(i + 1, Number(delay.value) + Number(step.value) * i)\n//       .then(({ position, delay }) => {\n//         console.log(`Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         console.log(`Rejected promise ${position} in ${delay}ms`);\n//       });\n//   }\n// }\n\n// console.log();\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const shouldResolve = Math.random() > 0.3;\n//       if (shouldResolve) {\n//         resolve(`Fulfilled promise ${position} in ${delay}ms`);\n//       } else {\n//         reject(`Rejected promise ${position} in ${delay}ms`);\n//       }\n//     }, 2000);\n//   });\n// }\n\n// createPromise(2, 500)\n//   .then(({ position, delay }) => {\n//     console.log(`Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log('333');\n//   });\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","addEventListener","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","Number","value","step","amount"],"version":3,"file":"03-promises.ecf01af8.js.map"}